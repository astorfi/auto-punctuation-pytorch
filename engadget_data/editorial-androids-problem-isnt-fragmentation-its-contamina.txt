
 
This thought was first given voice by Myriam Joire on last night's Mobile Podcast, and the simple, lethal accuracy of it has haunted me ever since. All the hubbub and unrest about whether Google is trying to lock Android down or not has failed to address whether Google should be trying to control the OS, and if so, what the (valid) reasons for that may be. Herein, I present only one, but it's arguably big enough to make all the dissidence about open source idealism and promises unkept fade into insignificance.
      

 

Let's start off by setting out what the goal behind Android is. It'd be impossible to identify the flaw with Google's strategy if we aren't clear on what it's strategizing toward. From its very inception, Android has been about expanding the reach of Google search. Never mind all the geeky professions of wanting to build a great mobile operating system and one which Googlites themselves would want and be proud to use -- there's no reason to doubt the veracity of those proclamations, but they're symptomatic, a sort of nice side benefit, of the overarching business decision. Google makes its money by selling ads. It sells those ads by serving them up in front of its vast audience, which in turn comes to it primarily through the use of Google search. When faced with the rampant ascendancy of mobile internet use -- and Google deserves credit for identifying the oncoming smartphone craze in good time and reacting to it -- the company knew it simply had to maneuver its products into the mobile realm or face a slow, ignominious path to irrelevancy. Ergo, what Google was really and truly striving for with Android was ubiquity. Instead of having to dance to the merry tune of carriers -- as Microsoft is now having to do with Verizon in order to get it to bundle Bing on some Android devices -- or appease manufacturers' many whims, Google opted to build its own OS, with that specific aim of expanding availability as rapidly and as broadly as was possible.To say that the goal has been accomplished would be an understatement. Android has stormed every Symbian castle, ransacked every webOS village, threatened the mighty tower of Mordor iOS, and thoroughly resisted the upstart challenge of Windows Phone 7. The reasons for its success and universal acceptance have been twofold. Google has invested plentiful resources into expeditiously building up its Linux derivative for the mobile space, on the one hand, and has decided to make the fruit of that labor available to phone manufacturers without hindrance or demand -- to use as they pleased, for it was open and flexible, and while it wasn't initially beautiful to look at, it was a sturdy platform from which to build.Many have characterized the resulting melange of multivariate Android skins and devices as generating fragmentation within the OS' ecosystem. That may be true, but is not in itself problematic. If there were no qualitative difference between Android on an HTC device and Android on a Sony Ericsson phone, the end user wouldn't care. He'd call that choice.Where the trouble arises is in the fact that not all Androids are born equal. The quality of user experience on Android fluctuates wildly from device to device, sometimes even within a single phone manufacturer's product portfolio, resulting in a frustratingly inconsistent landscape for the willing consumer. The Sony Ericsson Xperia X10 is a loud and proud Android phone, but it features an older version of the OS, has had a checkered history with updates, and generally leaves users sore they ever picked it up. At the same time, Samsung's 10 million unit-selling Galaxy S is too an Android phone, one that Google can rightly be proud of. The most irksome example, however, is LG's Optimus 2X -- it has Froyo on board both in its European 2X garb and in its US-bound G2x variety, but the former crashes the browser any time you look at it, while the latter, eschewing LG's customizations and running the stock Android 2.2, is one of the slickest and smoothest devices we've handled yet. The point is not that carrier or manufacturer customizations should be abandoned entirely (we know how much those guys hate standardization), it's that some of them are so poor that they actually detract from the Android experience. Going forward, it's entirely in Google's best interest to nix the pernicious effects of these contaminant devices and software builds. The average smartphone buyer is, ironically enough, quickly becoming a less savvy and geeky individual and he (or she) is not going to tolerate an inconsistent delivery on the promise contained in the word "Android."It may seem odd for us to pick faults with an operating system in the midst of a world-conquering tour, but then you only need to look at Symbian's fate to know that fortunes change quickly in the breathlessly developing smartphone realm. All Google really needs to do to patch the cracks and steady its ship is to live up to those rumors of Andy Rubin ruling from above. Dump the X10s and 2Xs from the portfolio of real Android devices -- and Google can do that by denying them access to its non-open source products like Gmail, Maps, and the all-important Android Market -- and give us some respite from having to worry if the next Android will be a rampant robot or a dithering dud. Custom skins can still live on, but it's high time Google lived up to its responsibility of ensuring they're up to scratch before associating its mobile brand with their final product. Such a move may dent the company's valuable reputation as a do-gooder, but if it helps the even more valuable Android OS keep its course toward world domination, surely it'd qualify to be called a good thing in and of itself?

       

 
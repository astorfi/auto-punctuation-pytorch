
 
Will that fancy new smartphone you're looking at buying run a version of Android that hasn't even been announced yet? Or that Nokia 5800 -- where's the Symbian^3 upgrade? Has the lack of commitment on a launch date for the webOS 2.0 upgrade stopped you from buying a Pre on Sprint? The balance between the relative importance of hardware and software in the smartphone industry is definitely teetering toward the software side these days for a number of reasons: screens have no need to get any bigger or higher-resolution, processors likely can't get much faster without a significant advance in battery technology, and we're reaching a point where we're all going to have HD camcorders in our pockets capable of taking still shots that'll put even higher-end point-and-shoots to shame. So when you stabilize the hardware like that -- that is, you get to the point where manufacturers are iterating essentially the same large slate over and over again with marginally better specs -- the spotlight starts to fix squarely on the software underneath.

That is to say, whether a phone receives "good" operating system builds (and receives them on a timely basis) really makes or breaks its retail success now more than ever before. All too often, the question isn't whether a particular device is great, it's whether the manufacturer and carrier have committed to upgrading it -- quite often to a version of its operating system that hasn't officially been announced. It's a recipe for confusion and paralysis among consumers that really don't have a great reason to be putting off their purchases -- they just want a reasonable assurance that their new phones aren't going to be regarded as "obsolete" in six or nine months. And why shouldn't they?
      

 

    The evolution of the smartphone, in many ways, is like watching a rerun of the evolution of the PC on a fifteen-year delay -- but this is one aspect that's completely foreign.    The evolution of the smartphone, in many ways, is like watching a rerun of the evolution of the PC on a fifteen-year delay -- but this is one aspect that's completely foreign. When in the PC's history did we iterate either hardware or software this quickly? In what alternate dimension could the desktop you bought in January be discontinued and virtually unsupported by fall? We wouldn't dare question the pace of innovation -- faster is always better -- but just as hardware appears to be reaching a steady state, it seems like owners should be able to hold on for phones longer, too.That's going to take some commitments from people and companies with a lot of power and a lot of ulterior motives, not all of them aligned. It's also going to take some shifts in philosophy, the way we think about phones, on a very broad scale. But it doesn't seem impossible. Consider this: the modern smartphone is a personal computer in every sense of the word. In fact, we'd argue that it's "the new PC." As such, the hardware and software should be decoupled. Heck -- even Apple, the most famously-closed ecosystem in the entire technology industry, decouples hardware from software insomuch that Macs are released on a timetable completely unrelated to that of Mac OS and can be upgraded -- at a cost -- for many years, at the owner's leisure.But can it be decoupled? Technologically, has the smartphone industry painted itself into a corner here? Well, quite the opposite, really. ARM has come to wield such extreme dominance in the mobile space at this point that operating system vendors -- Google, Palm, the Symbian Foundation / Nokia, and so on -- only need to target a couple generations of ARM architectures and little (really, nothing) else. Alternatives like Hitachi's SH architecture have long since fallen out of favor, and x86 is still a non-factor. Ironically, it was (and continues to be) x86's dominance in the PC space that allowed desktop hardware and software to be decoupled so elegantly over the past thirty years; to this day, you could install, say, MS-DOS 5 on your brand new Core i7 gaming rig if you really wanted to. Amazing, when you think about it.The point is that Android, Symbian, webOS, Windows Phone 7, and the rest of the pack should be able to advance with almost total disregard for the hardware business, knowing they're resolution-independent (within reason) and they can expect to target an ARMv6 or ARMv7 core. That's about it. The rest of the magic happens through drivers provided by the manufacturer and its products' component suppliers. Sounds kind of PC-like, doesn't it? Kind of how you'd install an operating system, automatically receive some baseline functionality using least-common-denominator hardware drivers, then install specialized drivers for your machine's video, sound, and network cards?    We're proposing you should be able to install it on any Android smartphone (or tablet, we suppose) on day one, assuming it meets 2.3's minimum hardware spec requirements.    So here's what we're getting at: say Android 2.3 comes out. It "hits store shelves." We're proposing you should be able to install it on any Android smartphone (or tablet, we suppose) on day one, assuming it meets 2.3's minimum hardware spec requirements. Yes, granted -- for most modern mobile platforms, that'll require some extremely user-friendly, foolproof tools for kernel compilation -- but it's not science fiction. It's not out of the realm of reason. It can be done.Of course, barring a descent into communism, there needs to be some economic impetus to this. As it stands today, manufacturers -- be they Apple, HTC, Samsung, whomever -- decide whether (and when) to offer updates to devices based on market impact, not on the needs of existing owners alone. You're much more likely to see a timely update to a new version of a platform for a high-profile device that's still being sold, for example, than you are for one that's been discontinued. So what we're proposing is that these guys move away from the practice of offering no-charge updates for some indeterminate period of time (and on some indeterminate schedule) that best suits their shareholders and toward a practice of offering them quickly, if not immediately, for a fee. We pay to upgrade to Windows 7, we pay to upgrade to Snow Leopard, we're sure we'll be paying to upgrade to Lion. Why wouldn't we pay for Android 2.3 or webOS 2.0? Yes, sure, Google provides the core of 2.3 at no charge -- but just like vendors of Linux distros for the desktop, we think manufacturers have the right to charge for the time and effort they put into adding support for their devices and for offering technical support to customers over the long haul. Done correctly (and priced correctly), it seems like a fair trade to us.The elephant in the room that we haven't mentioned, though, is the carrier. No network operator in the world will ever accept its role as a dumb pipe; they'll be subsidizing, branding, and generally ruining devices until the day you die... and then they'll install Bing on your tombstone. And that's fine -- maybe we just go ahead and leave carriers out of this little plan, letting the branded phones wither on the vine as they often do. You can't win 'em all. But for our money -- our $500 or more in unbranded, unsubsidized money, that is -- we see no reason we can't make this work.%Poll-55417%

       

 
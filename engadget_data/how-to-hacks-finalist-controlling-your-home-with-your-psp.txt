
   Today's How-To is the second finalist in our PSP vs. DS hacks contest. We'll keep 'em coming and you'll be able to vote for the winner at the end of the week.   Controlling Your Home with your PSP  by LiquidIce   When the wipeout browser hack came out, I saw someone controlling XBMC from their PSP browser. It's great that you could control XBMC from your PSP, but what if your XBOX isn't on, and your TV isn't on, and your TV is not on the right input?? You still have to get up or find the remote and adjust all of that...   I've come up with my own solution...


 
 Step 1: Setting up the DNS Hack  The first step was to be able to redirect the Wipeout Browser to any url I want. To do that I turned to MooPS, whichis a DNS/Web server that you run on your computer. It automatically forwards ingame.scea.com to the url of your choice.Once Sony releases their browser this step can be skipped, assuming sony gives us an 'address bar' orhomepage.

       More info aboutMooPS Download MooPS  Step #2: Controlling A/V equipment   
 By using a controller device called theWACI NX you could turn onthe TV, turn on the XBOX, switch to the correct input on the TV, and send the PLAY command to XBMC all in 1 buttonpress on your PSP.           So far I have the ability to turn my lights on and off. Have full control (Play, Stop, Pause, Menu) of my DVD player,TIVO, and High Def TV, all wirelessly from my PSP. I can also send commands to my PC running Winamp to tell it to PlayStop and Pause my music, or even browser my playlists.  To do most of the controlling I used this tiny little web server control box called the WACI NX. It's great because ithas an HTTP and FTP server and uses regular HTML to issue the commands making it the perfect match for my PSP, whichdoes not support any fancy Javascripts or DHTML. The PSP talks to the WACI NX via wifi through the network. In turn theWACI emits the IR signal to the TV through one of my IR Emitters, just as if I had pressed the button on theremote.    The WACI NX has a built in IR Learner so you can grab all of your remotes, learn all the button commands, and savethem in the WACI to be played back and emitted later. You could even do macros so it sends out a sequence of buttonpresses with a specified delay between each button press.

     
  The pages it hosts are constructed using Layers and Div tags. I put an image map on the graphics and created someHTML pages which have special links which are crafted so that when the PSP highlights and clicks on a spot on the imagemap, it instructs the WACI NX server to send an IR signal to my A/V equipment or triggers it's relays to cut power onthe lights.    The actual links are name value pairs going to a script I made on the WACI NX.(http://192.168.1.102/rpcpost.asp? method=IRSend&Param1=1&Param2=DVD&Param3=Play) That script is written to execute the IR Send then redirect back to the referring page. To change which command I run,I just change the url string in my link.    I'm sure that if you rigged something up you could do something similar with special software that runs on your PC.However, by using the WACI I have a dedicated piece of hardware that's only function is to send commands to my stuff nomatter which interface I create to control it. Unlike Sony who hides their protocols, the WACI NX has an open protocolwhich you can access from just about any web programming language. I can program using, Flash, ASP, HTML, Javascript,C#, C++, and Java. It's great for developers, and fairly simple to get started using the provided sample code. For moreinfo on the WACI NX you could check out waciworld.com  Step #3: Controlling Winamp    Another web server you could set up is a plugin for Winamp called BrowseAmp. This program will set up a mini webserver that uses the same kind of special urls to send commands to the Winamp player running on your computer. I've puttogether a skin that looks good on the PSP screen. I will post it on http://psphacks.blogspot.com  In the meantime, download BrowseAmp at: http://www.browseamp.com/  
  I have a lot more ideas on how to improve this system, but I am waiting to see what Sony does with the web browserfirst. Right now navigation is clunky because every button press causes the page to refresh. This is the same reasonwhy PSPIRC keeps refreshing the entire screen. I want to explore sending the commands to the WACI using an IFrame orXMLHTTPRequest object, but AFAIK these basic HTML features are not implemented in the wipeout browser.  The PSP has a lot of potential in terms of just Web Apps. With minimal effort, Sony can unlock browser functionalityon everyone's PSP's in the form of a network update. Until then we wait, and hope Sony does the right thing...



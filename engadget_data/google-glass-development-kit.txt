
So far, development on Glass has been extremely limited by the tools put in the hands of app creators. Namely the Mirror API with its constant need for an internet connection and limited functionality. The newly released Glass Development Kit (or at least an extremely early version of it) puts many more arrows in the quiver of coders. For one, apps can be built completely for offline use and can now directly access to Glass' hardware. This will allow Glassware to be made with the same capabilities as Google's own creations. It also introduces a few new features, including "live cards" which, like Windows Live Tiles, feature constantly updating information. Where as the static timeline cards live to the right of the home screen on Glass, live cards are found with a swipe to the left. Exercise app Strava has a demo version of an app that keeps details about your jog or bike ride constantly updating on a live card, including distance and speed.



There's also a new immersive mode, that takes over your entire display. Word Lens is an example of one such app, that translates text as you're looking at it. Rather than use a separate UI element, like Google Translate, it actually makes the original text disappear and simply replaces it with the language of your choice. Spellista, a word scramble game also uses the new immersive mode, and has you selecting letters by simply looking at them. By tapping into the gyroscope and accelerometer the game can actually track your head motions, paving the way for true AR applications.

The goal, with GDK is to turn glass from an interesting tech demo into something truly useful. And, while it's too early to judge for sure, the early batch of applications that tap into the true power of Glass show a lot of potential. In particular World Lens shows the ways in which Mountain View's wearable can be more than simply a smartphone strapped to your head, and takes a simple utilitarian approach to augmented reality. Additionally, Android developers will be able to reuse most of their existing code on Glass, they'll only need to make the appropriate UI tweaks. So that should ensure when a consumer version launches there will already be a well stocked stable of applications. Now it'll just have to convince the public that the convenience of Glass is worth looking silly for.


